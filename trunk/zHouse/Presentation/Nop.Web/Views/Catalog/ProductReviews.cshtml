@model ProductReviewsModel
@using Nop.Web.Models.Catalog;
@{
    
    
}

 <div class="col1"><div class="pinkNarrowTitleSmall">Bình luận</div></div>
                    <div class="col2">
                        <div class="col2Whole" id="form-coment-0">
                            <div class="col2a"><img src="../Themes/Zhouse/Content/images/d1.png" class="circleImg"></div>
                            <div class="col2b">
                                <form class="frmAddComment" id="frmAddComment-0" action="" method="post">                                   
                                    @Html.TextBoxFor(x => Model.AddProductReview.CustomerName, new {@class="formBox",placeholder="Tên của bạn",@readonly=Model.AddProductReview.CustomerName!=null?"readonly":"" })<br />
                                    @Html.ValidationMessageFor(x => x.AddProductReview.CustomerName)<br />
                                    @Html.TextAreaFor(x => Model.AddProductReview.ReviewText, new {@class="formBox",rows=2,style="width:508px" })<br />
                                    @Html.ValidationMessageFor(x=>x.AddProductReview.ReviewText)<br />
                                    <input type="submit" class="blueBtn" value="bình luận" style="float:right">
                                </form>
                            </div>
                        </div><!--col2Whole--->

                       <div id="list-comment"></div>

                    </div>
<script type="text/javascript">
    getComment(0);
    $(document).on(".frmAddComment","submit", function () {
        var form = $(this);
        if (form.valid())
        {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ProductReviewsAdd", new {productId=Model.ProductId })",
                data: form.serialize(),
                success: function (d)
                {
                    if (d == "OK") {
                        alert("Bình luận thành công!");
                        form.children(".formBox").val("");
                        getComment(0);
                    }
                    else
                        alert(d);
                  
                }
            })
        }
        return false;
    })
    function getComment(pageIndex)
    {
        $.get("@Url.Action("GetProductReview", new {productId=Model.ProductId })", { pageIndex: pageIndex }, function (d) {
            $("#list-comment").hide().html(d).show("slow");
        })
    }

</script>
    @*  <div class="write-review" id="review-form">
                <div class="title">
                    <strong>@T("Reviews.Write")</strong>
                </div>
                @using (Html.BeginForm())
                {
                    <div class="message-error">@Html.ValidationSummary(true)</div>
                    <div class="form-fields">
                        <div class="inputs">
                            @Html.LabelFor(model => model.AddProductReview.Title, new { }, ":")
                            @Html.TextBoxFor(model => model.AddProductReview.Title, Model.AddProductReview.CanCurrentCustomerLeaveReview ? (object)(new { @class = "review-title" }) : (object)(new { @class = "review-title", disabled = "disabled" }))
                            @Html.ValidationMessageFor(model => model.AddProductReview.Title)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.AddProductReview.ReviewText, new { }, ":")
                            @Html.TextAreaFor(model => model.AddProductReview.ReviewText, Model.AddProductReview.CanCurrentCustomerLeaveReview ? (object)(new { @class = "review-text" }) : (object)(new { @class = "review-text", disabled = "disabled" }))
                            @Html.ValidationMessageFor(model => model.AddProductReview.ReviewText)
                        </div>
                        <div class="review-rating">
                            @Html.LabelFor(model => model.AddProductReview.Rating, new { }, ":")
                                <ul>
                                    <li class="first">@T("Reviews.Fields.Rating.Bad")</li>
                                    <li>
                                        @Html.RadioButtonFor(model => model.AddProductReview.Rating, "1", new { id = "addproductrating_1" })
                                        @Html.RadioButtonFor(model => model.AddProductReview.Rating, "2", new { id = "addproductrating_2" })
                                        @Html.RadioButtonFor(model => model.AddProductReview.Rating, "3", new { id = "addproductrating_3" })
                                        @Html.RadioButtonFor(model => model.AddProductReview.Rating, "4", new { id = "addproductrating_4" })
                                        @Html.RadioButtonFor(model => model.AddProductReview.Rating, "5", new { id = "addproductrating_5" })
                                    </li>
                                    <li class="last">@T("Reviews.Fields.Rating.Excellent")</li>
                                </ul>
                        </div>
                        @if (Model.AddProductReview.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        }
                    </div>
                    <div class="buttons">
                        <input type="submit" name="add-review" class="button-1 write-product-review-button" value="@T("Reviews.SubmitButton")" />
                    </div>
                }
            </div>
        
        @if (Model.Items.Count > 0)
        {
            <div class="product-review-list">
                <div class="title">
                    <strong>@T("Reviews.ExistingReviews")</strong>
                </div>
                @foreach (var review in Model.Items)
                {
                    int ratingPercent = review.Rating * 20;                
                    <div class="product-review-item">
                        <div class="review-item-head">
                            <div class="review-title">
                                <strong>@review.Title</strong>
                            </div>
                            <div class="product-review-box">
                                <div class="rating">
                                    <div style="width: @(ratingPercent)%">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="review-text">
                            @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))
                        </div>
                        <div class="review-info">
                            <span class="user">
                                <strong>@T("Reviews.From"):</strong>
                                @if (review.AllowViewingProfiles)
                                {
                                    <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })">@(review.CustomerName)</a>
                                }
                                else
                                {
                                    @review.CustomerName
                                }
                            </span>
                            <span class="separator">|</span>
                            <span class="date">
                                <strong>@T("Reviews.Date"):</strong>
                                @review.WrittenOnStr
                            </span>
                        </div>
                        @Html.Partial("_ProductReviewHelpfulness", review.Helpfulness, new ViewDataDictionary())
                        @Html.Widget("productreviews_page_inside_review")
                    </div>
                }
            </div>
        }
      *@
  
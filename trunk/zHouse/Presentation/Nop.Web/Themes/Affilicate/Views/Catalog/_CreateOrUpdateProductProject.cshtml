﻿@model Nop.Web.Models.Catalog.InsertProductModel
@using Nop.Core.Domain.Customers
<link href="~/Content/uploadify/uploadify.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="~/Content/uploadify/jquery.uploadify.min.js?t=@DateTime.Now.ToString("ddMMyyyyhhmmss")"></script>
@{
    Html.AppendScriptParts("~/Scripts/jquery-te-1.4.0.min.js");
    Html.AppendCssFileParts("~/Themes/DefaultClean/Content/editorsimple.css");
    Html.AppendCssFileParts("~/Themes/DefaultClean/Content/jquery-te-1.4.0.css");
    bool isLogin = WorkContext.CurrentCustomer.IsRegistered();
    Model.Price = 1;
}
@Html.AntiForgeryToken()
@Html.HiddenFor(x => x.Id)
<div class="request-title blueTitle">ĐĂNG TIN DỰ ÁN <span class="free-text">Hoàn toàn miễn phí</span></div>
<p>
    Quảng cáo về bất động sản của bạn càng chi tiết, người mua sẽ càng dễ tìm kiếm thấy bạn hơn.<br />
    Nếu bạn gặp vấn đề gì trong quá trình gởi thông tin hãy liên hệ với chúng tôi qua Hotline: <b>0939448124.</b><br />
    Nhân viên của chúng tôi sẽ hỗ trợ bạn.
</p>
<br />
<div id="panel-error" class="message-error">
    @Html.ValidationSummary()
</div>
@Html.HiddenFor(model => model.Price)
<i class="note">(*) Bắt buộc phải nhập/chọn.</i>
<div class="floatLeft">
    <div class="blueText">THÔNG TIN LIÊN HỆ</div>
    <div class="boxWrapper form-request-contact">
        @Html.TextBoxFor(x => x.ContactName, new { @class = "formBoxIn", placeholder = "Họ và tên" })
        @Html.RequiredHint()
        @Html.TextBoxFor(x => x.ContactPhone, new { @class = "formBoxIn", placeholder = "Số điện thoại", })
        @Html.RequiredHint()
        @Html.TextBoxFor(x => x.Email, new { @class = "formBoxIn", placeholder = "Email" })
        <br />
        <br>
        @Html.TextBoxFor(x => x.NumberOfHome, new { @class = "formBoxIn", placeholder = "Số nhà" })
        @Html.DropDownListFor(x => x.DistrictId, Model.Districts, new { @class = "formBoxInSelect", id = "ddlQuan" })
        @Html.RequiredHint()
        @Html.DropDownListFor(x => x.WardId, new List<SelectListItem>(), "Chọn phường", new { @class = "formBoxInSelect" })
        @Html.DropDownListFor(x => x.StreetId, new List<SelectListItem>(), "Chọn đường", new { @class = "formBoxInSelect" })
        <br /> <br />
        @Html.TextBoxFor(x => x.FullAddress, new { @class = "formBoxIn", style = "width:90%", placeholder = "Địa chỉ đầy đủ" })
    </div><!----boxWrapper------->
</div><!---floatLeft---->
<div class="floatLeft">
    <div class="blueText">TỔNG QUAN VỀ DỰ ÁN</div>
    <div class="boxWrapperSmall form-request-contact">
        <table style="width:100%">
            <tbody>                
                <tr>                    
                    <td>Tên dự án @Html.RequiredHint() :</td>
                    <td>
                        @Html.TextBoxFor(x => x.Promotion, new { @class = "formBoxInTable", placeholder = "Tên dự án" })
                    </td>
                </tr>
                <tr>
                    <td>Tên gọi khác :</td>
                    <td>
                        @Html.TextAreaFor(x => x.DacDiemNoiBat, new { @class = "formBoxInTable", placeholder = "Tên gọi khác" })                        
                    </td>
                </tr>                
                <tr>
                    <td>Loại hình @Html.RequiredHint() :</td>
                    <td>
                        @Html.DropDownListFor(x => x.CateId, Model.Categories, new { @class = "formBoxInSelectTable" })
                    </td>                    
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.Area) @Html.RequiredHint() :</td>
                    <td>
                        @Html.TextBoxFor(x => x.Area, "{0:0}", new { @class = "formBoxInTable", placeholder = "Diện tích" })
                    </td>                    
                </tr>
                <tr>
                    <td>Số tầng @Html.RequiredHint() :</td>
                    <td>
                        @Html.TextBoxFor(x => x.Width, "{0:0}", new { @class = "formBoxInTable", placeholder = "Số tầng" })
                    </td>                    
                </tr>
                <tr>
                    <td>Số block @Html.RequiredHint() :</td>
                    <td>
                        @Html.TextBoxFor(x => x.Dept, "{0:0}", new { @class = "formBoxInTable", placeholder = "Số block" })
                    </td>                    
                </tr>
                <tr>
                    <td>Thời gian khởi công @Html.RequiredHint() :</td>
                    <td>
                        @Html.TextBoxFor(x => x.StartConstructionDate, new { @class = "formBoxInTable", placeholder = "Thời gian khởi công" })
                    </td>
                </tr>
                <tr>
                    <td>Thời gian hoàn thành @Html.RequiredHint() :</td>
                    <td>
                        @Html.TextBoxFor(x => x.FinishConstructionDate, new { @class = "formBoxInTable", placeholder = "Thời gian hoàn thành" })
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.StatusList) @Html.RequiredHint() :</td>
                    <td>
                        <select name="SelectedOptionAttributes" class="formBoxInSelectTable">
                            @foreach (var i in Model.StatusList)
                            {
                                <option value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value)) ? "selected=selected" : "")>@i.Text</option>
                            }
                        </select>                        
                    </td>                    
                </tr>
                <tr>
                    <td>Chủ đầu tư @Html.RequiredHint() :</td>
                    <td>
                        @Html.TextBoxFor(x => x.ChuDauTu, new { @class = "formBoxInTable", placeholder = "Chủ đầu tư" })                        
                    </td>
                </tr>
                <tr>
                    <td>Đơn vị thi công @Html.RequiredHint() :</td>
                    <td>
                        @Html.TextBoxFor(x => x.DonViThiCong, new { @class = "formBoxInTable", placeholder = "Tên đơn vị thi công" })
                    </td>
                </tr>
                
            </tbody>
        </table>
    </div><!---boxWrapperSmall---->
</div><!---floatLeft----->
<div class="floatLeft">
    <div class="blueText">HÌNH ẢNH ĐẠI DIỆN CHO DỰ ÁN</div>
    <div class="rightTable">        
        <div>
            <input type="file" id="FileUpload" />
        </div>
    </div><!---rightTable---->
    <div class="floatLeft">
        <div id="pictures">
        </div>
        <ul id="lstPic">
            @foreach (var i in Model.PictureModels)
            {
                <li id="picture_id_@i.Id" style="float:left;margin-right:10px">
                    <input type="button" class="blueBtn" style="position: absolute;" value="Xóa" onclick="deletePicture(@i.Id)" />
                    <img width="100" height="100" src="@i.ImageUrl" /><br />
                    <textarea maxlength="500" name="PictureTitle_@i.PictureId" cols="10" rows="5">@i.Description</textarea>
                </li>
            }
        </ul>
        <div class="clearBoth"></div>
    </div>
    <div class="clearBoth">
        <i class="note">(*)Hình ảnh kích thước đề nghị 700x700 px hình vuông,dung lượng nhỏ hơn 2Mb)</i>
    </div>
</div><!---floatLeft----->
<div class="floatLeft">
    <div class="blueText">THỜI GIAN ĐĂNG TIN @Html.RequiredHint()</div>
    <div class="boxWrapperSmall">        
        @Html.TextBoxFor(x => x.AvailableStartDateTime, "{0:dd/MM/yyyy}", new { @Name = "AvailableStartDateTime1", @Id="AvailableStartDateTime1", @class = " formBoxInText", type = "text", placeholder = "Ngày bắt đầu" })
        @Html.TextBoxFor(x => x.AvailableEndDateTime, "{0:dd/MM/yyyy}", new { @Name = "AvailableEndDateTime1", @Id="AvailableEndDateTime1", @class = " formBoxInText", placeholder = "Ngày kết thúc" })
        @Html.HiddenFor(x=> x.AvailableStartDateTime)
        @Html.HiddenFor(x => x.AvailableEndDateTime)
    </div>
</div><!---floatLeft---->
<div class="floatLeft">
    <div class="blueText">TIÊU ĐỀ @Html.RequiredHint()</div>
    <div class="boxWrapperSmall">
        @Html.TextBoxFor(x => x.Name, new { @class = " formBoxInText", style = "width:90%" })        
    </div>
</div><!---floatLeft---->
<div class="floatLeft">
    <div class="blueText">MÔ TẢ CHI TIẾT @Html.RequiredHint()</div>
    <div class="boxWrapperSmall">
        @Html.EditorFor(x => x.FullDescription, "RichEditor")
    </div>
</div><!---floatLeft---->
<div class="floatLeft">
        <input type="button" id="insertProduct-button" class="blueBigBtn" value="GỬI THÔNG TIN">
</div><!---floatLeft---->
<script type="text/javascript">
    $(function () {
        var pictureids = [];
        ISFIRSTLOAD=true;
        $("#@Html.FieldIdFor(x => x.NumberOfHome)").keyup(formatAdd);
        $("#@Html.FieldIdFor(x => x.StreetId),#@Html.FieldIdFor(x => x.DistrictId),#@Html.FieldIdFor(x => x.WardId)").change(formatAdd);
        $("#insertProduct-button").click(function () {            
            if(!$("#frmProduct").valid())
            {
                $('html,body').animate({
                    scrollTop: $("#panel-error").offset().top
                });
                return false;
            }
            if ($("#lstPic img").size() == 0&&$("div[id^=SWFUpload_]").size()==0) {
                alert('Vui lòng chọn hình ảnh đăng');
            }
            else if (Checkfiles($("#FileUpload")))
            {
                alert("File không hợp lệ");
            }
            else {
                displayAjaxLoading(true);
                if($("div[id^=SWFUpload_]").size()==0)
                {                    
                    var startDate = ConverDate($("#AvailableStartDateTime1").val());
                    $("#AvailableStartDateTime").val(startDate);
                    var endDate = ConverDate($("#AvailableEndDateTime1").val());
                    $("#AvailableEndDateTime").val(startDate);
                    $("#frmProduct").submit();
                }
                else
                    $('#FileUpload').uploadify('upload', '*')
            }
            return false;
        })

        $("#ddlQuan").change(function () {
            var selectedId = $(this).val();
            var ddlWard = $("#@Html.FieldIdFor(x => x.WardId)");
            var ddlStreet = $("#@Html.FieldIdFor(x => x.StreetId)");
            ddlWard.html("<option value=0>Chọn phường</option>");
            ddlStreet.html("<option value=0>Chọn đường</option>");
            $.get("@Url.Action("GetWardByDistrictId", "Common")", { id: selectedId }, function (d) {
                $.each(d.Ward, function (i, o) {
                    var option= $("<option/>").val(o.Id).text(o.Name);
                    if(ISFIRSTLOAD && (o.Id==@Model.WardId))
                        option.attr("selected","selected");
                    ddlWard.append(option);
                })

                $.each(d.Street, function (i, o) {
                    var option= $("<option/>").val(o.Id).text(o.Name);
                    if(ISFIRSTLOAD&& (o.Id==@Model.StreetId))
                          option.attr("selected","selected");
                    ddlStreet.append(option);
                })
                if(ISFIRSTLOAD)
                {
                    ddlWard.click();
                    ddlStreet.click();
                    ISFIRSTLOAD=false;
                }
            }).error(function () {

                alert("Lỗi load dữ liệu từ server!");
            })
        })
        $("#ddlQuan").change();
        $('#FileUpload').uploadify({
            'swf': '@Url.Content("~/Content/uploadify/uploadify.swf")',
            'uploader': '@Url.Action("UploadPicture", "Catalog")',
            'multi': true,
            'method': 'post',
            'buttonText': 'CHỌN ẢNH ĐĂNG...',
            'auto': false,
            'fileSizeLimit': '3MB',
            'fileTypeExts': '*.gif; *.jpg; *.png; *.jpeg',
            'uploadLimit': 1,
            'cancelImg': '@Url.Content("~/Content/uploadify/uploadify-cancel.png")',
            'removeCompleted': false,
            'onSelect': function (file) {
                flag_error = 1;
                $("div[id^=SWFUpload]").each(function(){
                    if($(this).find("textarea[name=PictureTitle_0]").length==0)
                    {
                        $(this).append('<textarea name="PictureTitle_0" cols="10" rows="5"></textarea>')
                    }
                })
            },
            'onUploadStart': function (file) {
                if (file == null || file.name == '') {
                    alert('Vui lòng chọn hình ảnh đăng');
                    $('#FileUpload').uploadify('stop');
                    return;
                }
            },
            'onUploadSuccess': function (file, data, response) {
                pictureids.push(data);
            },
            'onQueueComplete': function (queueData) {
                if(pictureids.length>0)
                {
                    $("textarea[name=PictureTitle_0]").each(function(i,p){
                        $(this).attr("name","PictureTitle_"+pictureids[i]);
                    });
                }
                if ($("div[id^=SWFUpload_]").size()==0||$("textarea[name^=PictureTitle_][name!=PictureTitle_0]").size()==0) {
                    alert('Vui lòng chọn hình ảnh đăng');
                    return false;
                }
                if ($("#frmProduct").valid()) {
                    $('#frmProduct').submit();
                }
                else
                {

                }
                //alert(queueData.uploadsSuccessful + ' files were successfully uploaded.');
            }
        });
    });
    function Checkfiles(fup) {
        //var fup = document.getElementById(filename);
        var fileName = fup.val();
        var ext = fileName.substring(fileName.lastIndexOf('.') + 1);
        if (ext == "gif" || ext == "GIF" || ext == "JPEG" || ext == "jpeg" || ext == "jpg" || ext == "JPG" || ext == "png" || ext == "PNG") {
            return true;
        }
        else {
            return false;
        }
    }
    var add=[3];
    function formatAdd()
    {
        add[0]=($("#@Html.FieldIdFor(x => x.NumberOfHome)").val());
        add[1]=($("#@Html.FieldIdFor(x => x.StreetId) option[value!=0]:selected").text());
        add[2]=($("#@Html.FieldIdFor(x => x.WardId) option[value!=0]:selected").text());
        add[3]=($("#ddlQuan option[value!=0]:selected").text());
        var result="";
        for(var i in add)
        {
            if(add[i]!="")
                result+=add[i]+", ";
        }
        $("#@Html.FieldIdFor(x => x.FullAddress)").val(result);
    }

    $("#AvailableStartDateTime1").datepicker();
    $("#AvailableEndDateTime1").datepicker();

</script>
@if (Model.Id > 0)
{
    <script type="text/javascript">                
        var CLICK=false;
        function deletePicture(id) {
            if($("#lstPic li").length==1||CLICK)
                return;
            var picture_id = $("#picture_id_"+id);
            CLICK=true;
            $.ajax({
                cache: false,
                type: "POST",
                data: { "id": id },
                url: "@Url.Action("ProductPictureDelete")",
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.error == 0) {
                        alert(data.message);
                        picture_id.remove();
                        CLICK=false;
                    }
                    else {
                        CLICK=false;
                        alert(data.message);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                    //statesProgressd.hide();
                }
            });
            //return event.defaultPrevented || event.returnValue == false;
            return false;
        }
    </script>
}
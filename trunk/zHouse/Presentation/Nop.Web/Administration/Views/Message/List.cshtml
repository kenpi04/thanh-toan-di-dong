@model MessageListModel
@using Telerik.Web.Mvc.UI
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Catalog.Categories.Manage").Text;
}
<table>
    <tr>
        <td class="adminTitle">
            Từ khóa
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.SearchName)
        </td>
        <td class="adminTitle">
            Loại tin nhắn
        </td>
        <td class="adminData">
            @Html.DropDownList("SearchTypeId", Model.Type)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            Từ ngày
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.FromDate)
        </td>
        <td class="adminTitle">
            Đến ngày
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.ToDate)
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <input type="button" id="btnSearch" class="t-button" value="@T("Admin.Common.Search")" />
        </td>
    </tr>
</table>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<MessageModel>()
                    .Name("message-grid")
                     .DataKeys(x =>
                    {
                        x.Add(y => y.Id).RouteKey("Id");
                    })
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Name).Width(150);
                        columns.Bound(x => x.Phone).Width(50);
                        columns.Bound(x => x.Email).Width(100);
                        columns.Bound(x => x.Title).Width(100);
                        columns.Bound(x => x.Body);
                        columns.Bound(x => x.CreatedOnUtc).Width(80).Format("{0:dd/MM/yyyy HH:mm tt}");
                        columns.Bound(x => x.BookDate).Width(130).Format("{0:dd/MM/yyyy HH:mm tt}");
                        //columns.Bound(x => x.Type).Width(10);
                        columns.Bound(x => x.ProductId).Width(50);
                        //columns.Bound(x => x.CustomerId);

                        columns.Command(commands =>
                        {

                            commands.Delete().Text(T("Admin.Common.Delete").Text);
                        }).Width(180);

                    })
                    .DataBinding(dataBinding =>
                    {
                        dataBinding.Ajax().Select("MessageSelect", "Message")
                            .Delete("MessageDelete", "Message");

                    })
                    .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
                     .ClientEvents(events => events.OnDataBinding("onDataBinding"))
                    .EnableCustomBinding(true))
        </td>
    </tr>
</table>
<script type="text/javascript">
    $(document).ready(function () {
        //search button
        $('#btnSearch').click(function () {
            //search
            var grid = $('#message-grid').data('tGrid');
            grid.currentPage = 1; //new search. Set page size to 1
            grid.ajaxRequest();
            return false;
        });

        $("#@Html.FieldIdFor(model => model.SearchName)").keydown(function (event) {
            if (event.keyCode == 13) {
                $("#btnSearch").click();
                return false;
            }
        });
    });

    function onDataBinding(e) {
        var searchModel = {
            SearchName: $('#@Html.FieldIdFor(model => model.SearchName)').val(),
            SearchType: $('#SearchTypeId').val(),
            ToDate: $('#@Html.FieldIdFor(model => model.ToDate)').val(),
            FromDate: $('#@Html.FieldIdFor(model => model.FromDate)').val()
        };
        e.data = searchModel;
    }
</script>

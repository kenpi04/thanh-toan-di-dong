@model Nop.Web.Models.Catalog.InsertProductModel
@using Nop.Core.Domain.Customers
<link href="~/Content/uploadify/uploadify.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="~/Content/uploadify/jquery.uploadify.min.js"></script>
@{
    Html.AppendScriptParts("~/Scripts/jquery-te-1.4.0.min.js");
    Html.AppendCssFileParts("~/Themes/DefaultClean/Content/editorsimple.css");
    Html.AppendCssFileParts("~/Themes/DefaultClean/Content/jquery-te-1.4.0.css");
    bool isLogin=WorkContext.CurrentCustomer.IsRegistered();
}
@Html.HiddenFor(x => x.Id)
@if(!isLogin)
{
<div class="fieldset">
    <div class="title">
        <strong>Thông tin liên hệ</strong>
    </div>
    <div class="form-fields">
        <div class="inputs">
            @Html.NopLabelFor(x => x.ContactName)
            @Html.RequiredHint()
            @Html.EditorFor(x => x.ContactName)
            @Html.ValidationMessageFor(x => x.ContactName)
        </div>
        <div class="inputs">
            @Html.NopLabelFor(x => x.ContactPhone)
            @Html.RequiredHint()
            @Html.EditorFor(x => x.ContactPhone)
            @Html.ValidationMessageFor(x => x.ContactPhone)
        </div>
        <div class="inputs">
            @Html.NopLabelFor(x => x.Email)
            @Html.RequiredHint()
            @Html.EditorFor(x => x.Email)
            @Html.ValidationMessageFor(x => x.Email)
        </div>

    </div>
</div>
}
<div class="fieldset">
    <div class="form-fields">
        <div class="inputs">
            <div>@Html.NopLabelFor(x => x.PhapLy)</div>
            <ul>
                @foreach (var i in Model.PhapLy)
                {
                    <li> @Html.RadioButton("SelectedOptionAttributes", i.Value,Model.SelectedOptionAttributes.Contains(int.Parse(i.Value))) @Html.Label(i.Text)</li>
                }
            </ul>


        </div>
    </div>
</div>
<div class="fieldset">
    <div class="title">
        <strong>Thông tin vị trí</strong>
    </div>
    <div class="form-fields">
        <div class="inputs">
            <div style="float: left; width: 50%">
                <div class="inputs">
                    @Html.NopLabelFor(x => x.NumberOfHome)
                    @Html.TextBoxFor(x => x.NumberOfHome)
                    @Html.ValidationMessageFor(x => x.NumberOfHome)
                </div>
                <div class="inputs">
                    @Html.NopLabelFor(x => x.DistrictId)
                    @Html.RequiredHint()
                    @Html.DropDownListFor(x => x.DistrictId, Model.Districts, new { id = "ddlQuan" })
                    @Html.ValidationMessageFor(x => x.DistrictId)
                </div>
            </div>
            <div style="float: left; width: 50%">
                <div class="inputs">
                    @Html.NopLabelFor(x => x.StreetId)
                    @Html.DropDownListFor(x => x.StreetId, new List<SelectListItem>(), "Chọn đường")

                </div>
                <div class="inputs">
                    @Html.NopLabelFor(x => x.WardId)
                    @Html.DropDownListFor(x => x.WardId, new List<SelectListItem>(), "Chọn phường")
                    @Html.ValidationMessageFor(x => x.WardId)
                </div>
            </div>
            <div class="clearfix"></div>

        </div>
        <div class="inputs">
            <label>@Html.NopLabelFor(x => x.FullAddress)</label>
            @Html.TextBoxFor(x => x.FullAddress, new { @style = "width:200px" })
        </div>
    </div>
</div>
<div class="fieldset">
    <div class="title">
        <strong>Thông tin căn nhà</strong>
    </div>
    <div class="form-fields">
        <div style="width: 50%; float: left">
            <div class="inputs">
                @Html.NopLabelFor(x => x.Price)
                @Html.RequiredHint()
                @Html.TextBoxFor(x => x.Price, new { maxlength = "5", @class = "number" })
                @Html.ValidationMessageFor(x => x.Price)
                <span id="price-text">vnđ</span>
            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.CateId)
                @Html.RequiredHint()
                @Html.DropDownListFor(x => x.CateId, Model.Categories)
                @Html.ValidationMessageFor(x => x.CateId)

            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.Area)
                @Html.RequiredHint()
                @Html.TextBoxFor(x => x.Area, new { maxlength = "5", @class = "number" })
                @Html.ValidationMessageFor(x => x.Area)
                <span>m<sub>2</sub></span>
            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.Width)

                @Html.TextBoxFor(x => x.Width, new { maxlength = "5", @class = "number" })
                @Html.ValidationMessageFor(x => x.Width)

            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.Dept)

                @Html.TextBoxFor(x => x.Dept, new { maxlength = "5", @class = "number" })
                @Html.ValidationMessageFor(x => x.Dept)

            </div>

        </div>
        <div style="width: 50%; float: left">
            <div class="inputs">
                @Html.NopLabelFor(x => x.NumberFloors)
                @Html.DropDownListFor(x => x.SelectedOptionAttributes, Model.NumberFloors)
                @Html.ValidationMessageFor(x => x.CateId)

            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.AreaUse)
                @Html.TextBoxFor(x => x.AreaUse, new { maxlength = "5", @class = "number" })
                @Html.ValidationMessageFor(x => x.AreaUse)

            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.BedRooms)
                @Html.DropDownListFor(x => x.SelectedOptionAttributes, Model.BedRooms)
             

            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.BadRooms)
                @Html.DropDownListFor(x => x.SelectedOptionAttributes, Model.BadRooms)
             

            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.Directors)
                @Html.DropDownListFor(x => x.SelectedOptionAttributes, Model.Directors)
               

            </div>
            <div class="inputs">
                @Html.NopLabelFor(x => x.NumberBlocks)
                @Html.DropDownListFor(x => x.SelectedOptionAttributes, Model.NumberBlocks)
             

            </div>
          

        </div>
        <div class="clearfix"></div>
    </div>
    <div class="inputs">
        @Html.NopLabelFor(x => x.Facilities)
        <ul style="list-style: none">
            @foreach (var i in Model.Facilities)
            { 
                <li style="float: left; width: 20%">
                    <input type="checkbox" name="SelectedOptionAttributes" value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value)) ? "checked=checked" : "") />
                    @Html.Label(i.Text)
                </li>
            }
        </ul>
        <div class="clearBoth"></div>
        Ghi chú về cơ sở vật chất / nội thất căn nhà ( vd: thiết kế kiểu châu âu, nhà ống hiện đại .... )<br />
        @Html.TextAreaFor(x=>x.NoteFacilities)
    </div>
    <div class="clearfix"></div>
    <div class="inputs">
        @Html.NopLabelFor(x => x.Environments)
        <ul style="list-style: none">
            @foreach (var i in Model.Environments)
            { 
                <li style="float: left; width: 20%">
                    <input type="checkbox" name="SelectedOptionAttributes" value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value)) ? "checked=checked" : "") />
                    @Html.Label(i.Text)
                </li>
            }
        </ul>
        <div class="clearBoth"></div>
        Ghi chú về môi trường sung quanh ( vd: Gần siêu thị nào, cách bao nhiêu mét .... )<br />
        @Html.TextAreaFor(x => x.NoteEnvironments)
    </div>
</div>
<div class="clearBoth"></div>
<div class="fieldset">
    <div class="inputs">
        <div>Thích hợp:</div>
        <ul>
            @foreach (var i in Model.ThichHop)
            {
                <li> <input type="checkbox" name="SelectedOptionAttributes" value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value))?"checked=checked":"")/> @Html.Label(i.Text)</li>
            }
        </ul>
        <div class="clearBoth"></div>
        Ghi chú ( vd: Bán tạp hóa, cho thuê nhà trọ, khu chợ vải ....)<br />
        @Html.TextAreaFor(x=>x.NoteThichHop)

    </div>
</div>
<div class="clearfix" style="height:23px"></div>

<div class="fieldset">
    <div class="title">
        <strong>Mô tả căn nhà</strong>
    </div>
    <div class="form-fields">
        <div class="inputs">
            @Html.NopLabelFor(x => x.Name)
            @Html.TextAreaFor(x => x.Name)
            @Html.ValidationMessageFor(x => x.Name)
        </div>
        <div class="inputs">
            @Html.NopLabelFor(x => x.Desription)
            @Html.TextAreaFor(x => x.Desription, new { @class = "jqte-test" })
            @Html.ValidationMessageFor(x => x.Desription)
        </div>
        <div class="inputs">
            <input type="file" id="FileUpload" />
            <div id="pictures">
              
            </div>
            <ul id="lstPic">
                @foreach (var i in Model.PictureModels)
                {
                    <li id="picture_id_@i.PictureId" style="float:left;margin-right:10px">

                        <input type="button" class="orangeBtn" value="Xóa" onclick="deletePicture(@i.Id)" />
                        <img width="100" height="100" src="@i.ImageUrl" /><br />
                        <textarea maxlength="500" name="PictureTitle_@i.PictureId" cols="10" rows="5">@i.Description</textarea>
                    </li>
                }
            </ul>
            <div class="clearBoth"></div>
        </div>
    </div>
</div>

<script type="text/javascript">



    $(function () {
        $(".jqte-test").jqte();
        var pictureids = [];
        $("#Price").keyup(function () {
            var price = $(this).val();
            $("#price-text").html(StringPrice(price, "vnđ"));


        })
        $("#@Html.FieldIdFor(x=>x.NumberOfHome)").keyup(formatAdd);
        $("#@Html.FieldIdFor(x=>x.StreetId),#@Html.FieldIdFor(x=>x.DistrictId),#@Html.FieldIdFor(x=>x.WardId)").change(formatAdd);

        $("#insertProduct-button").click(function () {
            if(!$("#frmProduct").valid())
                return false;

            if ($("#lstPic img").size() == 0&&$("div[id^=SWFUpload_]").size()==0) {
                alert('Vui lòng chọn hình ảnh đăng');

            }

            else if (Checkfiles($("#FileUpload")))
            {
                alert("File không hợp lệ");
            }
            else {
                if($("div[id^=SWFUpload_]").size()==0)
                {
                    $("#frmProduct").submit();
                }
                else
                    $('#FileUpload').uploadify('upload', '*')

            }

            return false;
        })

        $("#ddlQuan").change(function () {
            var selectedId = $(this).val();
            var ddlWard = $("#@Html.FieldIdFor(x => x.WardId)");
            var ddlStreet = $("#@Html.FieldIdFor(x => x.StreetId)");
            ddlWard.html("<option value=0>Chọn phường</option>");
            ddlStreet.html("<option value=0>Chọn đường</option>");
            $.get("@Url.Action("GetWardByDistrictId", "Common")", { id: selectedId }, function (d) {
                $.each(d.Ward, function (i, o) {
                    ddlWard.append($("<option/>").val(o.Id).text(o.Name));
                })

                $.each(d.Street, function (i, o) {
                    ddlStreet.append($("<option/>").val(o.Id).text(o.Name));
                })
                ddlStreet.val(@Model.StreetId);
                ddlWard.val(@Model.WardId);
            }).error(function () {

                alert("Fail receice from server!");
            })

        })
       
        $('#FileUpload').uploadify({
            'swf': '@Url.Content("~/Content/uploadify/uploadify.swf")',
            'uploader': '@Url.Action("UploadPicture", "Catalog")',
            'multi': true,
            'method': 'post',
            'buttonText': 'CHỌN ẢNH ĐĂNG...',
            'auto': false,
            'fileSizeLimit': '3MB',
            'fileTypeExts': '*.gif; *.jpg; *.png; *.jpeg',
            'uploadLimit': 20,
            'cancelImg': '@Url.Content("~/Content/uploadify/uploadify-cancel.png")',
            'removeCompleted': false,
            'onSelect': function (file) {
                flag_error = 1;
                $("div[id^=SWFUpload]").each(function(){
                    if($(this).find("textarea[name=PictureTitle]").length==0)
                    {
                        $(this).append('<textarea name="PictureTitle" cols="10" rows="5"></textarea>')
                    }
                })

            },
            'onUploadStart': function (file) {

                if (file == null || file.name == '') {
                    alert('Vui lòng chọn hình ảnh đăng');
                    $('#FileUpload').uploadify('stop');
                    return;
                }

            },
            'onUploadSuccess': function (file, data, response) {
                pictureids.push(data);
            },
            'onQueueComplete': function (queueData) {
               
                $("textarea[name=PictureTitle]").each(function(i,p){
                    $(this).attr("name","PictureTitle_"+pictureids[i]);
                });              

                if ($("#frmProduct").valid()) {
                    $('#frmProduct').submit();
                }
                //alert(queueData.uploadsSuccessful + ' files were successfully uploaded.');
            }
        });
    });
    function Checkfiles(fup) {
        //var fup = document.getElementById(filename);
        var fileName = fup.val();
        var ext = fileName.substring(fileName.lastIndexOf('.') + 1);
        if (ext == "gif" || ext == "GIF" || ext == "JPEG" || ext == "jpeg" || ext == "jpg" || ext == "JPG" || ext == "png" || ext == "PNG") {
            return true;
        }
        else {
            return false;
        }
    }
    var add=[3];
    function formatAdd()
    {
        add[0]=($("#@Html.FieldIdFor(x=>x.NumberOfHome)").val());
        add[1]=($("#@Html.FieldIdFor(x=>x.StreetId) option[value!=0]:selected").text());
        add[2]=($("#@Html.FieldIdFor(x=>x.WardId) option[value!=0]:selected").text());
        add[3]=($("#ddlQuan option[value!=0]:selected").text());
        var result="";
        for(var i in add)
        {
            if(add[i]!="")
                result+=add[i]+", ";
        }
        $("#@Html.FieldIdFor(x=>x.FullAddress)").val(result);
    }
</script>
@if (Model.Id > 0)
{
    <script type="text/javascript">
        $(document).ready(function () {
            var price=@Model.Price.ToString("#");
                  $("#@Html.FieldIdFor(x => x.Price)").val(price/1000000).keyup();
                  $("#@Html.FieldIdFor(x => x.Width)").val(@Math.Floor(Model.Width));
                  $("#@Html.FieldIdFor(x => x.Dept)").val(@Math.Floor(Model.Dept));
                  $("#@Html.FieldIdFor(x => x.Area)").val(@Math.Floor(Model.Area));
                  $("#@Html.FieldIdFor(x => x.AreaUse)").val(@Math.Floor(Model.AreaUse));
                  $("#ddlQuan").change();
                  $("#@Html.FieldIdFor(x => x.StreetId)").val(@Model.StreetId);
                  $("#@Html.FieldIdFor(x => x.WardId)").val(@Model.WardId);
        })
        var CLICK=false;
        function deletePicture(id) {
            if($("#lstPic li").length==1||CLICK)
                return;
            var picture_id = $("#picture_id_"+id);   
            CLICK=true;
            $.ajax({
                cache: false,
                type: "POST",
                data: { "id": id },
                url: "@Url.Action("ProductPictureDelete")",
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.error == 0) {
                    
                        alert(data.message);    
                        CLICK=false;
                    }
                    else {
                        CLICK=false;
                      alert(data.message);
                       
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                   
                    alert('Failed to retrieve data.');
                    //statesProgressd.hide();
                }
            });
            //return event.defaultPrevented || event.returnValue == false;
            return false;
        }
    </script> 
}
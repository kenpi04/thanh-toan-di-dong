﻿@model Nop.Web.Models.Catalog.InsertProductModel
@using Nop.Core.Domain.Customers
<link href="~/Content/uploadify/uploadify.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="~/Content/uploadify/jquery.uploadify.min.js?t=@DateTime.Now.ToString("ddMMyyyyhhmmss")"></script>
@{
    Html.AppendScriptParts("~/Scripts/jquery-te-1.4.0.min.js");
    Html.AppendCssFileParts("~/Themes/DefaultClean/Content/editorsimple.css");
    Html.AppendCssFileParts("~/Themes/DefaultClean/Content/jquery-te-1.4.0.css");    
}
@Html.AntiForgeryToken()
@Html.HiddenFor(x => x.Id)
<div class="request-title blueTitle">ĐĂNG TIN CHO THUÊ BẤT ĐỘNG SẢN <span class="free-text">Hoàn toàn miễn phí</span></div>
<p>
    Quảng cáo về bất động sản của bạn càng chi tiết, người mua sẽ càng dễ tìm kiếm thấy bạn hơn.<br />
    Nếu bạn gặp vấn đề gì trong quá trình gởi thông tin hãy liên hệ với chúng tôi qua Hotline: <b>0939448124.</b><br />
    Nhân viên của chúng tôi sẽ hỗ trợ bạn.
</p>
<i class="note">(*) Bắt buộc phải nhập/chọn.</i>
<div id="panel-error" class="message-error">
    @Html.ValidationSummary()
</div>
<div class="floatLeft">
    <div class="blueText">THÔNG TIN LIÊN HỆ</div>
    <div class="boxWrapper form-request-contact">
        @Html.RequiredHint()
        @Html.TextBoxFor(x => x.ContactName, new { @class = "formBoxIn", placeholder = "Họ và tên" })        
        @Html.RequiredHint()
        @Html.TextBoxFor(x => x.ContactPhone, new { @class = "formBoxIn", placeholder = "Số điện thoại", })
        @Html.TextBoxFor(x => x.Email, new { @class = "formBoxIn", placeholder = "Email" })
    </div><!----boxWrapper------->
</div><!---floatLeft---->
<div class="floatLeft">
    <div class="boxWrapper form-request-contact">
        <div class="blueText">ĐỊA CHỈ BẤT ĐỘNG SẢN</div>
        @Html.RequiredHint()
        @Html.DropDownListFor(x => x.DistrictId, Model.Districts, new { @class = "formBoxInSelect", id = "ddlQuan" })
        @Html.RequiredHint()
        @Html.DropDownListFor(x => x.WardId, new List<SelectListItem>(), "Chọn phường", new { @class = "formBoxInSelect" })
        @Html.RequiredHint()
        @Html.DropDownListFor(x => x.StreetId, new List<SelectListItem>(), "Chọn đường", new { @class = "formBoxInSelect" })        
        @Html.RequiredHint()
        @Html.TextBoxFor(x => x.NumberOfHome, new { @class = "formBoxIn", placeholder = "Số nhà" })
        @Html.TextBoxFor(x => x.FullAddress, new { @class = "formBoxIn", style = "width:714px;margin-left:12px", placeholder = "Địa chỉ đầy đủ" })
    </div>
    <div class="blueText">THÔNG TIN BẤT ĐỘNG SẢN</div>
    <div class="boxWrapperSmall form-request-contact">
        <table style="width:100%">
            <tbody>
                <tr>
                    <td class="request-label">@Html.LabelFor(x => x.Price, "Giá/tháng (vnđ) ") @Html.RequiredHint()</td>
                    <td>
                        @Html.TextBoxFor(x => x.Price, new { @class = "formBoxInTable", placeholder = "Giá/tháng" })                        
                        <span id="price-text">(Giá liên hệ = 0)</span>
                    </td>
                    <td class="request-label">@Html.LabelFor(x => x.Width) @Html.RequiredHint()</td>
                    <td>
                        @Html.TextBoxFor(x => x.Width, "{0:0.##}", new { @class = "formBoxInTable", placeholder = "Chiều rộng" })
                    </td>                    
                </tr>
                <tr>
                    <td class="request-label">@Html.LabelFor(x => x.CateId) @Html.RequiredHint()</td>
                    <td>
                        @Html.DropDownListFor(x => x.CateId, Model.Categories, new { @class = "formBoxInSelectTable" })                        
                    </td>
                    <td class="request-label">@Html.LabelFor(x => x.Dept) @Html.RequiredHint()</td>
                    <td>
                        @Html.TextBoxFor(x => x.Dept, "{0:0.##}", new { @class = "formBoxInTable", placeholder = "Chiều dài" })
                    </td>                    
                </tr>
                <tr>
                    <td class="request-label">@Html.LabelFor(x => x.NumberFloors) @Html.RequiredHint()</td>
                    <td>
                        <select name="SelectedOptionAttributes" class="formBoxInSelectTable">
                            @foreach (var i in Model.NumberFloors)
                            {
                                <option value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value)) ? "selected=selected" : "")>@i.Text</option>
                            }
                        </select>                        
                    </td>                    
                    <td class="request-label">@Html.LabelFor(x => x.Area) @Html.RequiredHint()</td>
                    <td>
                        @Html.TextBoxFor(x => x.Area, "{0:0.##}", new { @class = "formBoxInTable", placeholder = "Diện tích" })
                    </td>
                </tr>
                <tr>
                    <td class="request-label">@Html.LabelFor(x => x.StatusList) @Html.RequiredHint()</td>
                    <td>
                        <select name="SelectedOptionAttributes" class="formBoxInSelectTable">
                            @foreach (var i in Model.StatusList)
                            {
                                <option value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value)) ? "selected=selected" : "")>@i.Text</option>
                            }
                        </select>                        
                    </td>
                    <td class="request-label">@Html.LabelFor(x => x.AreaUse)</td>
                    <td>
                        @Html.TextBoxFor(x => x.AreaUse, "{0:0.##}", new { @class = "formBoxInTable", placeholder = "Diện tích sử dụng" })
                    </td>
                </tr>                
            </tbody>
        </table>
    </div><!---boxWrapperSmall---->
</div><!---floatLeft----->
<div class="floatLeft">
    <div class="colA"><div class="blueText">CƠ SỞ VẬT CHẤT @Html.RequiredHint() &nbsp;&nbsp;<label class="note2">(Vui lòng chọn ít nhất 1 thuộc tính)</label></div></div>
    <div class="colB">
        <ul style="list-style: none" id="CoSoVatChat">
            @foreach (var i in Model.Facilities)
            {
                <li style="float: left; width: 20%">
                    <input type="checkbox" name="SelectedOptionAttributes" value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value)) ? "checked=checked" : "") />
                    @Html.Label(i.Text)
                </li>
            }
        </ul>
    </div>
    <div class="clearBoth"></div>
    <div class="boxWrapperSmall">
        @Html.TextAreaFor(x => x.NoteFacilities, new { @class = "formBoxInText", placeholder = "Ghi chú thêm về cơ sở vật chất / nội thất căn nhà" })
    </div>
</div><!----floatLeft----->
<div class="floatLeft">
    <div class="colA"><div class="blueText">MÔI TRƯỜNG XUNG QUANH @Html.RequiredHint() &nbsp;&nbsp;<label class="note2">(Vui lòng chọn ít nhất 1 thuộc tính)</label></div></div>
    <div class="colB">
        <ul style="list-style: none" id="MoiTruong">
            @foreach (var i in Model.Environments)
            {
                <li style="float: left; width: 20%">
                    <input type="checkbox" name="SelectedOptionAttributes" value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value)) ? "checked=checked" : "") />
                    @Html.Label(i.Text)
                </li>
            }
        </ul>
    </div>
    <div class="clearBoth"></div>
    <div class="boxWrapperSmall">
        @Html.TextAreaFor(x => x.NoteEnvironments, new { @class = "formBoxInText", placeholder = "Ghi chú thêm về môi trường xung quanh ( vd: Gần siêu thị nào, cách bao nhiêu mét .... )" })
    </div>
</div><!----floatLeft----->
<div class="floatLeft">
    <div class="colA"><div class="blueText">THÍCH HỢP @Html.RequiredHint() &nbsp;&nbsp;<label class="note2">(Vui lòng chọn ít nhất 1 thuộc tính)</label></div></div>
    <div class="colB">
        <ul style="list-style: none" id="ThichHop">
            @foreach (var i in Model.ThichHop)
            {
                <li style="float: left; width: 20%">
                    <input type="checkbox" name="SelectedOptionAttributes" value="@i.Value" @(Model.SelectedOptionAttributes.Contains(int.Parse(i.Value)) ? "checked=checked" : "") />
                    @Html.Label(i.Text)
                </li>
            }
        </ul>
    </div>
    <div class="clearBoth"></div>
    <br />
    <div class="boxWrapperSmall">
        @Html.TextAreaFor(x => x.NoteEnvironments, new { @class = "formBoxInText", placeholder = "vd: Bán tạp hóa, cho thuê nhà trọ, khu chợ vải ....)" })
    </div>
</div><!----floatLeft----->
<div class="floatLeft" id="anhdang">
    <div class="blueText">HÌNH ẢNH BẤT ĐỘNG SẢN<small> (Hình càng rõ ràng, đầy đủ, bất động sản sẽ được chú ý hơn)</small></div>
    <div class="rightTable">
        <div class="clearBoth">
            <i class="note">(*)Kích thước đề nghị 700x700 px hình vuông,dung lượng nhỏ hơn 2Mb</i><br />
            <i class="note">(*)Vui lòng đăng ít nhất 1 hình</i>
        </div>
        <div>
            <input type="file" id="FileUpload" />
        </div>
    </div><!---rightTable---->
    <div class="floatLeft">
        <div id="pictures">
        </div>
        <ul id="lstPic" class="sortable grid">
            @foreach (var i in Model.PictureModels)
            {
                <li id="picture_id_@i.Id">
                    <input type="button" class="blueBtn" style="position: absolute;font-size:10px;padding:5px 5px;" value="Xóa" onclick="deletePicture(@i.Id)" />
                    <img width="100" height="100" src="@i.ImageUrl" />
                    <input type="hidden" name="picture_id_@i.PictureId" />
                </li>
            }
        </ul>
        <div class="clearBoth"></div>
    </div>
</div><!---floatLeft----->
<div class="floatLeft">
    <div class="blueText">THỜI GIAN ĐĂNG TIN @Html.RequiredHint()</div>
    <div class="boxWrapperSmall">
        <table>
            <tbody>
                <tr class="table-dateTime">
                    <td>@Html.LabelFor(x => x.AvailableStartDateTime)</td>
                    <td>@Html.LabelFor(x => x.AvailableEndDateTime)</td>
                </tr>
                <tr class="table-dateTime">
                    <td>@Html.TextBoxFor(x => x.AvailableStartDateTime, "{0:dd/MM/yyyy}", new { @Name = "AvailableStartDateTime1", @Id = "AvailableStartDateTime1", @class = " formBoxInText", type = "text", placeholder = "Ngày bắt đầu" })</td>
                    <td>@Html.TextBoxFor(x => x.AvailableEndDateTime, "{0:dd/MM/yyyy}", new { @Name = "AvailableEndDateTime1", @Id = "AvailableEndDateTime1", @class = " formBoxInText", type = "text", placeholder = "Ngày kết thúc" })</td>
                </tr>
            </tbody>
        </table>
        @Html.HiddenFor(x => x.AvailableStartDateTime)
        @Html.HiddenFor(x => x.AvailableEndDateTime)
    </div>
</div><!---floatLeft---->
<div class="floatLeft">
    <div class="blueText" title="Tiêu đề tin đăng: hãy ghi rõ ràng đầy đủ để tin của bạn được tìm kiếm dễ dàng hơn.">TIÊU ĐỀ @Html.RequiredHint()</div>
    <div class="boxWrapperSmall">
        @Html.TextBoxFor(x => x.Name, new { @class = "formBoxInText", style = "width:99%", placeholder = "Tiêu đề" })
        <label style="color:#888;font-style:italic;">(Tiêu đề ít nhất 10 ký tự và nhiều nhất 150 ký tự. Ví dụ: Cho thuê nhà nguyên căn giá rẻ, quận Bình Tân, 5 triệu một tháng)</label>        
    </div>
</div><!---floatLeft---->
<div class="floatLeft">
    <div class="blueText">MÔ TẢ CHI TIẾT @Html.RequiredHint()</div>
    <div class="boxWrapperSmall">
        @Html.EditorFor(x => x.FullDescription, "RichEditor")
    </div>
</div><!---floatLeft---->
<script type="text/javascript">
    $(function () {
        $(".jqte-test").jqte();
        var pictureids = [];
        ISFIRSTLOAD=true;

        $("#Price").keyup(function () {
            var price = $(this).val();
            if(price>99999){price = 99999;$("#Price").val(price);}
            if(price<0){price=0;$("#Price").val(price);}
            $("#price-text").html(StringPriceForRent(price, "vnđ"));
        })
        $("#@Html.FieldIdFor(x => x.Width),#@Html.FieldIdFor(x => x.Dept)").keyup(function () {
            var value1 = $("#@Html.FieldIdFor(x => x.Dept)").val();
            var value2 = $("#@Html.FieldIdFor(x => x.Width)").val();
            $("#@Html.FieldIdFor(x => x.Area)").val((value1 * value2).toFixed(2));
        })
        $("#@Html.FieldIdFor(x => x.NumberOfHome)").keyup(formatAdd);
        $("#@Html.FieldIdFor(x => x.StreetId),#@Html.FieldIdFor(x => x.DistrictId),#@Html.FieldIdFor(x => x.WardId)").change(formatAdd);
        $("#insertProduct-button").click(function () {
            if(!$("#frmProduct").valid())
            {
                $('html,body').animate({
                    scrollTop: $("#panel-error").offset().top
                });
                return false;
            }
            else if($("#CoSoVatChat input:checked").length==0)
            {
                alert("Vui lòng chọn ít nhất một thuộc tính cơ sở vật chất");
                $('html,body').animate({
                    scrollTop: $("#CoSoVatChat").offset().top - 100
                });
            }
            else if($('#MoiTruong input:checked').length==0)
            {
                alert("Vui lòng chọn ít nhất một thuộc tính môi trường xung quanh");
                $('html,body').animate({
                    scrollTop: $("#MoiTruong").offset().top - 100
                });
            }
            else if($("#ThichHop input:checked").length==0)
            {
                alert("Vui lòng chọn loại thích hợp của căn nhà");
                $('html,body').animate({
                    scrollTop: $("#ThichHop").offset().top - 100
                });
            }
            else if ($("#lstPic img").size() == 0&&$("div[id^=SWFUpload_]").size()==0) {
                alert('Vui lòng chọn hình ảnh đăng');
                $('html,body').animate({
                    scrollTop: $("#anhdang").offset().top - 100
                });
            }
            else if (Checkfiles($("#FileUpload")))
            {
                alert("File không hợp lệ");
            }
            else {
                displayAjaxLoading(true);
                formSubmit();
            }
            return false;
        })

        $("#ddlQuan").change(function () {
            var selectedId = $(this).val();
            var ddlWard = $("#@Html.FieldIdFor(x => x.WardId)");
            var ddlStreet = $("#@Html.FieldIdFor(x => x.StreetId)");
            ddlWard.html("<option value=0>Chọn phường</option>");
            ddlStreet.html("<option value=0>Chọn đường</option>");
            $.get("@Url.Action("GetWardByDistrictId", "Common")", { id: selectedId }, function (d) {
                $.each(d.Ward, function (i, o) {
                    var option= $("<option/>").val(o.Id).text(o.Name);
                    if((ISFIRSTLOAD==true)&&(o.Id==@Model.WardId))
                    {option.attr("selected","selected");}
                    ddlWard.append(option);
                })

                $.each(d.Street, function (i, o) {
                    var option= $("<option/>").val(o.Id).text(o.Name);
                    if((ISFIRSTLOAD==true)&&(o.Id==@Model.StreetId))
                    {option.attr("selected","selected");}
                    ddlStreet.append(option);
                })
                if(ISFIRSTLOAD)
                {
                    ddlWard.click();
                    ddlStreet.click();
                    ISFIRSTLOAD=false;
                }
            }).error(function () {

                alert("Fail receice from server!");
            })
        })
        $("#ddlQuan").change();
        $('#FileUpload').uploadify({
            'swf': '@Url.Content("~/Content/uploadify/uploadify.swf")',
            'uploader': '@Url.Action("UploadPicture", "Catalog")',
            'multi': true,
            'method': 'post',
            'buttonText': 'CHỌN ẢNH ĐĂNG...',
            'auto': true,
            'fileSizeLimit': '2MB',
            'fileTypeExts': '*.gif; *.jpg; *.png; *.jpeg',
            'uploadLimit': 20,
            'cancelImg': '@Url.Content("~/Content/uploadify/uploadify-cancel.png")',
            'removeCompleted': false,
            'queueID'  : 'lstPic',
            'itemTemplate': '<li id="${fileID}" class="uploadify-queue-item" draggable="true" >\
                    <div class="cancel">\
                        <a class="cancel-a blueBtn" href="javascript:$(\'#${instanceID}\').uploadify(\'cancel\', \'${fileID}\')">Xóa</a>\
                    </div>\
                    <img style="display:none" class="preview" name="picture_id_0" />\<input type="hidden" name="picture_id_0" </li>',
            'onSelect': function (file) {
                flag_error = 1;
            },
            'onUploadStart': function (file) {
                if (file == null || file.name == '') {
                    alert('Vui lòng chọn hình ảnh đăng');
                    $('#FileUpload').uploadify('stop');
                    return;
                }
            },
            'onUploadSuccess': function (file, data, response) {
                var obj = JSON.parse(data);
                var img = $("img[name=picture_id_0]").first();
                var input = $("input[name=picture_id_0]").first();
                img.attr("name","picture_id_"+obj.id);
                input.attr("name","picture_id_"+obj.id);
                img.attr("src",obj.link);
                img.show();
            },
            'onQueueComplete': function (queueData) {
                if ($("li[id^=SWFUpload_]").size()==0) {
                    alert('Vui lòng chọn hình ảnh đăng');
                    return false;
                }
                $('.sortable').sortable('destroy');
                $('.sortable').sortable();
            }
        });
    });
    function formSubmit()
    {
        if ($("#frmProduct").valid()) {
            var startDate = ConverDate($("#AvailableStartDateTime1").val());
            $("#AvailableStartDateTime").val(startDate);
            var endDate = ConverDate($("#AvailableEndDateTime1").val());
            $("#AvailableEndDateTime").val(endDate);
            $('#frmProduct').submit();
        }
    }
    function Checkfiles(fup) {
        var fileName = fup.val();
        var ext = fileName.substring(fileName.lastIndexOf('.') + 1);
        if (ext == "gif" || ext == "GIF" || ext == "JPEG" || ext == "jpeg" || ext == "jpg" || ext == "JPG" || ext == "png" || ext == "PNG") {
            return true;
        }
        else {
            return false;
        }
    }
    $("#AvailableStartDateTime1").datepicker();
    $("#AvailableEndDateTime1").datepicker();

    var add=[3];
    function formatAdd()
    {
        add[0]=($("#@Html.FieldIdFor(x => x.NumberOfHome)").val());
        add[1]=($("#@Html.FieldIdFor(x => x.StreetId) option[value!=0]:selected").text());
        add[2]=($("#@Html.FieldIdFor(x => x.WardId) option[value!=0]:selected").text());
        add[3]=($("#ddlQuan option[value!=0]:selected").text());
        var result="";
        for(var i in add)
        {
            if(add[i]!="")
                result+=add[i]+", ";
        }
        $("#@Html.FieldIdFor(x => x.FullAddress)").val(result+'Hồ Chí Minh');
        if(!ISFIRSTLOAD){
            getMap();}
    }
    $("#AvailableStartDateTime1").datepicker();
    $("#AvailableEndDateTime1").datepicker();
    $(function() {
        $('.sortable').sortable();})
</script>
@if (Model.Id > 0)
{
    <script type="text/javascript">
        $(document).ready(function () {
            var price=@Model.Price;
            $("#@Html.FieldIdFor(x => x.Price)").val(price/100000).keyup();
        })
        var CLICK=false;
        function deletePicture(id) {
            if($("#lstPic li").length==0||CLICK)
                return;
            var picture_id = $("#picture_id_"+id);
            CLICK=true;
            $.ajax({
                cache: false,
                type: "POST",
                data: { "id": id },
                url: "@Url.Action("ProductPictureDelete")",
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    if (data.error == 0) {
                        alert(data.message);
                        picture_id.remove();
                        CLICK=false;
                    }
                    else {
                        CLICK=false;
                        alert(data.message);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                }
            });
            return false;
        }
    </script>
}
<div class="floatLeft">
    <div class="blueText">CHỌN VỊ TRÍ BẤT ĐỘNG SẢN TRÊN BẢN ĐỒ</div>
    <div class="boxWrapperSmall">
        @Html.Partial("_MapInsertProduct", Model)
    </div>
</div>
<div class="floatLeft">
    <div class="boxWrapperSmall">
        <input type="button" id="insertProduct-button" class="blueBigBtn" value="GỬI THÔNG TIN">
    </div>
</div>
<script src="/Scripts/jquery.sortable.js"></script>
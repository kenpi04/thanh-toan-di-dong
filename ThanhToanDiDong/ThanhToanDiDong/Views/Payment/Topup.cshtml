@model ThanhToanDiDong.Models.Payment.TopupModel

<div class="col-md-6">
    @using (Html.BeginForm("Topup", "Payment", FormMethod.Post, new { role = "form", id = "formBuyTopup" }))
    {
        @Html.ValidationSummary(true);
        <div class="form-group">
            @Html.TextBoxFor(x => x.Phone, new { maxlength = "15", @class = "form-control", placeholder = "Nhập số điện thoại" })
            @*<span>
                <img id="imglogo" style="display:none" />
            </span>*@
            @Html.ValidationMessageFor(x => x.Phone)
        </div>
        <div class="form-group">
            @Html.DropDownListFor(x => x.PhoneType, new List<SelectListItem> {
                                                    new SelectListItem() { Text = "Trả trước", Value = "1" },
                                                    new SelectListItem() { Text = "Trả sau", Value = "2" } },
                                                    "Chọn hình thức thuê bao", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.PhoneType)
        </div>
        <div class="form-group">
            @Html.DropDownListFor(x => x.PriceListId, Model.PriceList, "Chọn mệnh giá", new { @class = "form-control", disabled = "disabled" })
            @Html.ValidationMessageFor(x => x.PriceListId)
        </div>
        <div class="form-group">
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Nhập email", type="email" })
            @Html.ValidationMessageFor(x => x.Email)
    </div>
        <div class="form-group">
            <label class="amount">Thành tiền</label>
            <span class="totalMoney"><b id="totalMoney"></b> </span>
        </div>
        <button type="button" id="btnPaymentTopup" class="btn btn-primary btn-card">Tiếp tục</button>
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {
        @*var CATE = [
            @foreach(var i in ViewBag.Cate as Dictionary<string,string>)
            {
                <text>{ img: '@i.Key', dauso: '@i.Value' },</text>
            }
        ];*@
        $("#btnPaymentTopup").click(function () {
            if (!ValidPhoneNumber($("#@Html.IdFor(x=>x.Phone)").val())) {
                var validator = $("#formBuyTopup").validate();
                validator.showErrors({
                    "Phone": "Số điện thoại không hợp lệ"
                });
                return false;
            }
            $("#formBuyTopup").submit();
        })


        $("#@Html.IdFor(x=>x.Phone)").keyup(function (e) {
            var val = $(this).val();
            if (isNaN(val)) {
                $(this).val(val.substring(0, val.length - 1));
                return;
            }

            if (val.length > 4)
                val = val.substring(0, 3);
            if (val.length < 3)
                $("#imglogo").hide();
            //if (val.length == 3 || val.length == 4) {

            //    $.each(CATE, function (index, item) {
            //        var dausos = item.dauso.split(',');
            //        for (var i in dausos) {
            //            if (dausos[i] == val) {
            //                $("#imglogo").attr("src", "/Content/Images/" + item.img).show('slow');
            //                return;
            //            }
            //        }

            //    });
            //}

        })
        $("#@Html.IdFor(x=>x.Phone)").change(function () {
            $("#@Html.IdFor(x=>x.Phone)").keyup();
            var value = $("#@Html.IdFor(x=>x.Phone)").val();
            if (value.length < 3)
                return;
            var ddlCate = $("#@Html.IdFor(x=>x.PriceListId)");

            ddlCate.html("<option value=0>Chọn mệnh giá</option");
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCategory")",
                data: { phone: value },
                success: function (data) {
                    if (data == "")
                        return;
                    $.each(data, function (index, value) {
                        ddlCate.append($("<option></option>").val(value.Value).text(value.Text).attr("data-price", value.price));
                    })
                    $("#@Html.IdFor(x=>x.PriceListId)").removeAttr("disabled");
                },
                error: function () {
                    ddlCate.html("<option value=0>Chọn mệnh giá</option");
                }
            });
        })
        $("#@Html.IdFor(x=>x.PriceListId)").change(function () {
            var price = $("#formBuyTopup").find("#@Html.IdFor(x=>x.PriceListId)").find("option:selected").attr("data-price");
            $("#totalMoney").html(price + " vnđ");
        })
    })
    function ValidPhoneNumber(val) {

        val = val.replace(/-/g, '');
        if (val == '' || val.length < 10 || val.length > 11) {
            return false;
        }
        var strCheck = '';
        if (val.length == 11) {
            strCheck = val.substr(0, 4);
        }
        else {
            strCheck = val.substr(0, 3);
        }
        if (strCheck == '099'
            || strCheck == '0199'
            || strCheck == '091'
            || strCheck == '094'
            || strCheck == '0123'
            || strCheck == '0125'
            || strCheck == '0127'
            || strCheck == '0129'
            || strCheck == '0124'
            || strCheck == '095'
            || strCheck == '092'
            || strCheck == '0188'
            || strCheck == '0186'
            || strCheck == '097'
            || strCheck == '098'
            || strCheck == '096'
            || strCheck == '0162'
            || strCheck == '0163'
            || strCheck == '0164'
            || strCheck == '0165'
            || strCheck == '0166'
            || strCheck == '0167'
            || strCheck == '0168'
            || strCheck == '0169'
            || strCheck == '0197'
            || strCheck == '0198'
            || strCheck == '090'
            || strCheck == '093'
            || strCheck == '0122'
            || strCheck == '0126'
            || strCheck == '0121'
            || strCheck == '0128'
            || strCheck == '0120') {
            return true;
        }

        return false;
    }
</script>

